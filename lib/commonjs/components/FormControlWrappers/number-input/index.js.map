{"version":3,"sources":["index.tsx"],"names":["NumberInputControl","props","name","label","children","numberInputProps","numberInputFieldProps","rest","field","error","layoutProps","remainingProps","handleChange","defaultProps","mt","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAMA;;AACA;;AAEA;;AAMA;;;;;;AASO,MAAMA,kBAAwC,GACnDC,KADsD,IAEnD;AACH,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,gBAJI;AAKJC,IAAAA,qBALI;AAMJ,OAAGC;AANC,MAOFN,KAPJ;AAQA,QAAM,CAACO,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,IAAqB,sBAASP,IAAT,CAA3B;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgC,2BAAeJ,IAAf,CAAtC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAmB,+BAAzB;AACA,QAAMC,YAAY,GAAG;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAArB;AAEA,sBACE,6BAAC,wBAAD;AAAa,IAAA,IAAI,EAAEZ,IAAnB;AAAyB,IAAA,KAAK,EAAEC;AAAhC,KAA2CO,WAA3C,gBACE,6BAAC,uBAAD;AACE,IAAA,KAAK,EAAEF,KAAK,CAACO;AADf,KAEMF,YAFN,EAGMR,gBAHN,EAIMM,cAJN;AAKE,IAAA,YAAY,EAAE,MAAMC,YAAY,CAACV,IAAD;AALlC,mBAOE,6BAAC,4BAAD;AACE,IAAA,SAAS,EAAE,CAAC,CAACO,KADf,CAEE;;AAFF,KAGMH,qBAHN,EAPF,EAYGF,QAZH,CADF,CADF;AAkBD,CAlCM;;;eAoCQJ,kB","sourcesContent":["import {\n  NumberInput as NBNumberInput,\n  NumberInputField,\n  INumberInputProps,\n  INumberInputFieldProps,\n} from 'native-base';\nimport { useField, useFormikContext } from 'formik';\nimport React, { FC, ReactNode } from 'react';\nimport type { BaseProps } from '../../props';\nimport { FormControl } from '../../form-control';\nimport {\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from 'native-base';\nimport { getLayoutProps } from '../../../utils';\n\nexport type NumberInputProps = BaseProps & {\n  numberInputProps?: INumberInputProps;\n  numberInputFieldProps?: INumberInputFieldProps;\n  showStepper?: boolean;\n  children?: ReactNode;\n};\n\nexport const NumberInputControl: FC<NumberInputProps> = (\n  props: NumberInputProps\n) => {\n  const {\n    name,\n    label,\n    children,\n    numberInputProps,\n    numberInputFieldProps,\n    ...rest\n  } = props;\n  const [field, { error }] = useField(name);\n  const [layoutProps, remainingProps] = getLayoutProps(rest);\n  const { handleChange } = useFormikContext();\n  const defaultProps = { mt: 2 };\n\n  return (\n    <FormControl name={name} label={label} {...layoutProps}>\n      <NBNumberInput\n        value={field.value}\n        {...defaultProps}\n        {...numberInputProps}\n        {...remainingProps}\n        handleChange={() => handleChange(name)}\n      >\n        <NumberInputField\n          isInvalid={!!error}\n          // onChange={}\n          {...numberInputFieldProps}\n        />\n        {children}\n      </NBNumberInput>\n    </FormControl>\n  );\n};\nexport { NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper };\nexport default NumberInputControl;\n"]}