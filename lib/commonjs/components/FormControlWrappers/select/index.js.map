{"version":3,"sources":["index.tsx"],"names":["SelectControl","props","name","selectProps","children","label","rest","field","handleChange","setFieldTouched","handleBlur","layoutProps","remainingProps","defaultProps","mt","value"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;AAQO,MAAMA,aAA8B,GAAIC,KAAD,IAAwB;AACpE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA,KAA/B;AAAsC,OAAGC;AAAzC,MAAkDL,KAAxD;AACA,QAAM,CAACM,KAAD,IAAU,sBAASL,IAAT,CAAhB;AACA,QAAM;AAAEM,IAAAA,YAAF;AAAgBC,IAAAA,eAAhB;AAAiCC,IAAAA;AAAjC,MAAgD,+BAAtD;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC,2BAAeN,IAAf,CAAtC;AACA,QAAMO,YAAY,GAAG;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAArB;AAEA,sBACE,6BAAC,wBAAD;AAAa,IAAA,IAAI,EAAEZ,IAAnB;AAAyB,IAAA,KAAK,EAAEG;AAAhC,KAA2CM,WAA3C,gBACE,6BAAC,kBAAD;AACE,IAAA,aAAa,EAAEJ,KAAK,CAACQ,KADvB;AAEE,IAAA,aAAa,EAAEP,YAAY,CAACN,IAAD,CAF7B;AAGE,IAAA,OAAO,EAAE,MAAM;AACbO,MAAAA,eAAe,CAACP,IAAD,CAAf;AACAQ,MAAAA,UAAU,CAACR,IAAD,CAAV;AACD;AANH,KAOMW,YAPN,EAQMV,WARN,EASMS,cATN,GAWGR,QAXH,CADF,CADF;AAiBD,CAxBM;;;eA0BQJ,a","sourcesContent":["import { Select as NBSelect, ISelectProps } from 'native-base';\nimport { useField, useFormikContext } from 'formik';\nimport React, { FC, ReactNode } from 'react';\nimport type { BaseProps } from '../../props';\nimport { FormControl } from '../../form-control';\nimport { getLayoutProps } from '../../../utils';\nimport { Select, Icon } from 'native-base';\n\ntype SelectProps = BaseProps & {\n  selectProps?: ISelectProps;\n  children: ReactNode;\n};\n\nexport const SelectControl: FC<SelectProps> = (props: SelectProps) => {\n  const { name, selectProps, children, label, ...rest } = props;\n  const [field] = useField(name);\n  const { handleChange, setFieldTouched, handleBlur } = useFormikContext();\n  const [layoutProps, remainingProps] = getLayoutProps(rest);\n  const defaultProps = { mt: 2 };\n\n  return (\n    <FormControl name={name} label={label} {...layoutProps}>\n      <NBSelect\n        selectedValue={field.value}\n        onValueChange={handleChange(name)}\n        onFocus={() => {\n          setFieldTouched(name);\n          handleBlur(name);\n        }}\n        {...defaultProps}\n        {...selectProps}\n        {...remainingProps}\n      >\n        {children}\n      </NBSelect>\n    </FormControl>\n  );\n};\nexport { Select, Icon };\nexport default SelectControl;\n"]}