{"version":3,"sources":["index.tsx"],"names":["PinInputControl","props","name","children","label","pinInputProps","rest","field","handleChange","layoutProps","remainingProps","defaultProps","mt","value"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;AAQO,MAAMA,eAAyC,GACpDC,KADuD,IAEpD;AACH,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,aAAzB;AAAwC,OAAGC;AAA3C,MAAoDL,KAA1D;AACA,QAAM,CAACM,KAAD,IAAU,sBAASL,IAAT,CAAhB;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAmB,+BAAzB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC,2BAAeJ,IAAf,CAAtC;AACA,QAAMK,YAAY,GAAG;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAArB;AAEA,sBACE,6BAAC,wBAAD;AAAa,IAAA,IAAI,EAAEV,IAAnB;AAAyB,IAAA,KAAK,EAAEE;AAAhC,KAA2CK,WAA3C,gBACE,6BAAC,oBAAD;AACE,IAAA,KAAK,EAAEF,KAAK,CAACM;AADf,KAEMR,aAFN,EAGMM,YAHN;AAIE,IAAA,QAAQ,EAAEH,YAAY,CAACN,IAAD;AAJxB,KAKMQ,cALN,GAOGP,QAPH,CADF,CADF;AAaD,CAtBM;;;eAwBQH,e","sourcesContent":["import { PinInput, IPinInputProps } from 'native-base';\nimport { useField, useFormikContext } from 'formik';\nimport React, { FC, ReactNode } from 'react';\nimport type { BaseProps } from '../../props';\nimport { FormControl } from '../../form-control';\nimport { getLayoutProps } from '../../../utils';\n\nexport type PinInputControlProps = BaseProps & {\n  pinInputProps?: IPinInputProps;\n  showStepper?: boolean;\n  children?: ReactNode;\n};\n\nexport const PinInputControl: FC<PinInputControlProps> = (\n  props: PinInputControlProps\n) => {\n  const { name, children, label, pinInputProps, ...rest } = props;\n  const [field] = useField(name);\n  const { handleChange } = useFormikContext();\n  const [layoutProps, remainingProps] = getLayoutProps(rest);\n  const defaultProps = { mt: 2 };\n\n  return (\n    <FormControl name={name} label={label} {...layoutProps}>\n      <PinInput\n        value={field.value}\n        {...pinInputProps}\n        {...defaultProps}\n        onChange={handleChange(name)}\n        {...remainingProps}\n      >\n        {children}\n      </PinInput>\n    </FormControl>\n  );\n};\n\nexport default PinInputControl;\n"]}