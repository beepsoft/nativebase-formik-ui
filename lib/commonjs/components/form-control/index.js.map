{"version":3,"sources":["index.tsx"],"names":["FormControl","props","children","name","label","helper","rest","error","isSubmitting"],"mappings":";;;;;;;AAAA;;AAIA;;AACA;;;;;;AAMO,MAAMA,WAAiC,GAAIC,KAAD,IAA6B;AAC5E,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,MAAzB;AAAiC,OAAGC;AAApC,MAA6CL,KAAnD;AACA,QAAM,GAAG;AAAEM,IAAAA;AAAF,GAAH,IAAgB,sBAASJ,IAAT,CAAtB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAmB,+BAAzB;AAEA,sBACE,6BAAC,uBAAD;AAAe,IAAA,SAAS,EAAE,CAAC,CAACD,KAA5B;AAAmC,IAAA,SAAS,EAAEC;AAA9C,KAAgEF,IAAhE,GACGF,KAAK,iBAAI,6BAAC,uBAAD,CAAe,KAAf,QAAsBA,KAAtB,CADZ,EAEGF,QAFH,EAGGG,MAAM,iBAAI,6BAAC,uBAAD,CAAe,UAAf,QAA2BA,MAA3B,CAHb,EAIGE,KAAK,iBACJ,6BAAC,uBAAD,CAAe,YAAf,QAA6BA,KAA7B,CALJ,CADF;AAUD,CAfM;;;eAiBQP,W","sourcesContent":["import {\n  FormControl as NBFormControl,\n  IFormControlProps as NBFormControlProps,\n} from 'native-base';\nimport { useField, useFormikContext } from 'formik';\nimport React, { FC } from 'react';\nimport type { BaseProps } from '../props';\n\nexport type FormControlProps = Omit<BaseProps, 'label'> &\n  NBFormControlProps & { label?: string; isTouchedRequired?: boolean };\n\nexport const FormControl: FC<FormControlProps> = (props: FormControlProps) => {\n  const { children, name, label, helper, ...rest } = props;\n  const [, { error }] = useField(name);\n  const { isSubmitting } = useFormikContext();\n\n  return (\n    <NBFormControl isInvalid={!!error} isDisable={isSubmitting} {...rest}>\n      {label && <NBFormControl.Label>{label}</NBFormControl.Label>}\n      {children}\n      {helper && <NBFormControl.HelperText>{helper}</NBFormControl.HelperText>}\n      {error && (\n        <NBFormControl.ErrorMessage>{error}</NBFormControl.ErrorMessage>\n      )}\n    </NBFormControl>\n  );\n};\n\nexport default FormControl;\n"]}