{"version":3,"sources":["index.tsx"],"names":["NumberInput","props","name","children","numberInputProps","numberInputFieldProps","rest","field","error","handleChange","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAMA;;AACA;;;;;;AAeO,MAAMA,WAAiC,GAAIC,KAAD,IAA6B;AAC5E,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA,gBAHI;AAIJC,IAAAA,qBAJI;AAKJ,OAAGC;AALC,MAMFL,KANJ;AAOA,QAAM,CAACM,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,IAAqB,sBAASN,IAAT,CAA3B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAmB,+BAAzB;AAEA,sBACE,6BAAC,uBAAD;AAAe,IAAA,KAAK,EAAEF,KAAK,CAACG;AAA5B,KAAuCN,gBAAvC,EAA6DE,IAA7D,gBACE,6BAAC,4BAAD;AACE,IAAA,SAAS,EAAE,CAAC,CAACE,KADf;AAEE,IAAA,QAAQ,EAAEC,YAAY,CAACP,IAAD;AAFxB,KAGMG,qBAHN,EADF,EAMGF,QANH,CADF;AAUD,CArBM;;;eAuBQH,W","sourcesContent":["import {\n  NumberInput as NBNumberInput,\n  NumberInputField,\n  INumberInputProps,\n  INumberInputFieldProps,\n} from 'native-base';\nimport { useField, useFormikContext } from 'formik';\nimport React, { FC, ReactNode } from 'react';\nimport type { BaseProps } from '../../props';\nimport {\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from 'native-base';\n\ntype NumberInputProps = BaseProps & {\n  numberInputProps?: INumberInputProps;\n  numberInputFieldProps?: INumberInputFieldProps;\n  showStepper?: boolean;\n  children?: ReactNode;\n};\n\nexport const NumberInput: FC<NumberInputProps> = (props: NumberInputProps) => {\n  const {\n    name,\n    children,\n    numberInputProps,\n    numberInputFieldProps,\n    ...rest\n  } = props;\n  const [field, { error }] = useField(name);\n  const { handleChange } = useFormikContext();\n\n  return (\n    <NBNumberInput value={field.value} {...numberInputProps} {...rest}>\n      <NumberInputField\n        isInvalid={!!error}\n        onChange={handleChange(name)}\n        {...numberInputFieldProps}\n      />\n      {children}\n    </NBNumberInput>\n  );\n};\nexport { NumberInputStepper, NumberIncrementStepper, NumberDecrementStepper };\nexport default NumberInput;\n"]}