{"version":3,"sources":["index.tsx"],"names":["Button","useFormikContext","React","ButtonGroup","ResetButton","props","children","rest","isSubmitting","dirty","resetForm"],"mappings":";;AAAA,SAASA,MAAT,QAAqC,aAArC;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,OAAOC,KAAP,MAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAIA,OAAO,MAAMC,WAAiC,GAAIC,KAAD,IAA6B;AAC5E,QAAM;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAAwBF,KAA9B;AACA,QAAM;AAAEG,IAAAA,YAAF;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,MAAqCT,gBAAgB,EAA3D;AAEA,sBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMS,SAAS,EAD1B;AAEE,IAAA,UAAU,EAAEF,YAAY,IAAI,CAACC;AAF/B,KAGMF,IAHN,GAKGD,QALH,CADF;AASD,CAbM;AAcP,SAASH,WAAT;AACA,eAAeC,WAAf","sourcesContent":["import { Button, IButtonProps } from 'native-base';\nimport { useFormikContext } from 'formik';\nimport React, { FC } from 'react';\nimport { ButtonGroup } from 'native-base';\n\nexport type ResetButtonProps = IButtonProps;\n\nexport const ResetButton: FC<ResetButtonProps> = (props: ResetButtonProps) => {\n  const { children, ...rest } = props;\n  const { isSubmitting, dirty, resetForm } = useFormikContext();\n\n  return (\n    <Button\n      onPress={() => resetForm()}\n      isDisabled={isSubmitting || !dirty}\n      {...rest}\n    >\n      {children}\n    </Button>\n  );\n};\nexport { ButtonGroup };\nexport default ResetButton;\n"]}